# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
okhttp = "4.12.0"
retrofit2 = "2.11.0"
spring = "1.1.4"
spring-boot = "3.4.+"
resilience4j = "2.2.0"
junit5 = "5.9.1"
mockito="5.10.0"


[libraries]

## Spring
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-boot-autoconfigure-processor = { module = "org.springframework.boot:spring-boot-autoconfigure-processor" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }

## okhttp3
okhttp3-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp3-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp3-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }

## retrofit2
retrofit2-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit2" }
retrofit2-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit2" }
retrofit2-xml = { module = "com.squareup.retrofit2:converter-jaxb3", version.ref = "retrofit2" }
retrofit2-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2" }
retrofit2-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }

jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime" }
jaxb-bind = { module = "jakarta.xml.bind:jakarta.xml.bind-api" }


## resilience4j
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-retry = { module = "io.github.resilience4j:resilience4j-retry", version.ref = "resilience4j" }

## micrometer
micrometer-core = { module = "io.micrometer:micrometer-core" }
micrometer-tracing = { module = "io.micrometer:micrometer-tracing" }
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
micrometer-otel = { module = "io.micrometer:micrometer-tracing-bridge-otel" }
micrometer-jvm= {module ="io.github.mweirauch:micrometer-jvm-extras", version="0.2.2"}
otel-exporter = { module = "io.opentelemetry:opentelemetry-exporter-otlp" }


lombok = { module = "org.projectlombok:lombok" }
slf4j-api = { module = "org.slf4j:slf4j-api" }
findbugs = { module = "com.google.code.findbugs:jsr305", version = "3.0.2" }

# junit
junit5-bom = { module = "org.junit:junit-bom", version.ref = "junit5" }
junit5-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit5-platform = { module = "org.junit.platform:junit-platform-launcher"}
junit = { module = "junit:junit" }
json-unit = {module = "net.javacrumbs.json-unit:json-unit", version = '3.2.4'}
hamcrest-core = {module = "org.hamcrest:hamcrest", version = '2.2'}
mockito-core = {module ="org.mockito:mockito-core", version.ref = "mockito"}
awaitility = {module ="org.awaitility:awaitility"}

## spotbugs
spotbugs-annotations = {module ="com.github.spotbugs:spotbugs-annotations", version ="4.8.5"}


[plugins]
springboot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring = { id = "io.spring.dependency-management", version.ref = "spring" }
spotless = { id = "com.diffplug.spotless", version = "6.25.0" }
release = { id = "net.researchgate.release", version = "3.0.2" }
spotbugs = { id = "com.github.spotbugs", version = "6.0.7" }
